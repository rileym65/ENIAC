initiating {
  go P1-A:1
  }
accumulator 1 {
  power True
  alpha D1-A
  alphafilter SHL2
  program 1 {
    mode 0
    clear True
    programin P1-A:1
    }
  program 2 {
    mode alpha
    clear False
    programin P1-A:4
    }
  }
accumulator 2 {
  power True
  alpha D1-A
  a D1-A
  program 1 {
    mode alpha
    clear False
    programin P1-A:1
    }
  program 2 {
    mode A
    clear False
    programin P1-A:3
    }
  }
accumulator 3 {
  power True
  alpha D1-A
  a D1-B
  program 1 {
    mode alpha
    clear False
    programin P1-A:2
    }
  program 2 {
    mode A
    clear False
    programin P1-A:3
    }
  }
accumulator 9 {
  power True
  alpha D1-A
  beta D1-B
  s D5-A
  program 1 {
    mode alpha
    clear False
    programin P5-A:1
    }
  program 2 {
    mode beta
    clear False
    programin P5-A:2
    }
  program 6 {
    mode S
    clear False
    programin P5-B:1
    repeat 1
    }
  }
accumulator 10 {
  power True
  alpha D1-A
  beta D1-B
  s D5-B
  program 1 {
    mode alpha
    clear False
    programin P5-A:6
    }
  program 2 {
    mode beta
    clear False
    programin P5-A:7
    }
  program 6 {
    mode S
    clear False
    programin P5-B:2
    repeat 1
    }
  }
accumulator 11 {
  power True
  alpha D5-A
  a D5-A
  program 1 {
    mode alpha
    clear False
    programin P5-B:1
    }
  program 2 {
    mode A
    clear False
    programin P5-B:3
    }
  }
accumulator 13 {
  power True
  alpha D5-C
  beta D5-B
  gamma D5-A
  a D1-A
  s D1-A
  program 1 {
    mode beta
    clear False
    programin P5-B:2
    }
  program 2 {
    mode gamma
    clear False
    programin P5-B:3
    }
  program 8 {
    mode A
    clear False
    programin P5-B:7
    repeat 1
    }
  program 9 {
    mode S
    clear True
    programin P5-B:8
    repeat 1
    }
  }
constant {
  power True
  program 9 {
    mode lr
    select l
    programin P1-A:1
    programout P1-A:2
    }
  program 10 {
    mode lr
    select r
    programin P1-A:2
    programout P1-A:3
    }
  jlm True
  jrm True
  klm True
  krm True
  outputa D1-A
  regj -9950000000
  regk -9970000000
  }
multiplier {
  power true
  program 1 {
    iermode alpha
    icandmode beta
    product AC
    figures 1
    places 10
    programin P1-A:3
    programout P1-A:4
    }
  ralpha P5-A:1
  rbeta P5-A:2
  dalpha P5-A:6
  dbeta P5-A:7
  outputac P5-B:7
  outputsc P5-B:8
  outputrs P5-B:1
  outputds P5-B:2
  outputf P5-B:3
  lhpp1 D5-A
  rhpp1 D5-C
  }
